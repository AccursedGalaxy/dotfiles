#!/usr/bin/env bash

# This script applies pywal colors to tmux
# It should be called by the update_terminals.sh script or manually

# Get colors from wal
COLORS_JSON="$HOME/.cache/wal/colors.json"

if [ ! -f "$COLORS_JSON" ]; then
  echo "colors.json not found. Make sure pywal has been run."
  exit 1
fi

# Parse colors from colors.json
background=$(grep -o '"background": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
foreground=$(grep -o '"foreground": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
cursor=$(grep -o '"cursor": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color0=$(grep -o '"color0": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color1=$(grep -o '"color1": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color2=$(grep -o '"color2": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color3=$(grep -o '"color3": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color4=$(grep -o '"color4": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color5=$(grep -o '"color5": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color6=$(grep -o '"color6": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color7=$(grep -o '"color7": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color8=$(grep -o '"color8": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color9=$(grep -o '"color9": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color10=$(grep -o '"color10": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color11=$(grep -o '"color11": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color12=$(grep -o '"color12": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color13=$(grep -o '"color13": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color14=$(grep -o '"color14": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)
color15=$(grep -o '"color15": *"[^"]*"' "$COLORS_JSON" | cut -d'"' -f4)

# Generate colors-only.conf file
cat > "$HOME/.config/tmux/colors-only.conf" << EOF
# ============================================================================
# Colors for TMUX - generated by pywal $(date)
# ============================================================================

# Status bar basic setup
set -g status on
set -g status-justify left
set -g status-interval 1

# Status bar colors
set -g status-style bg=${background},fg=${foreground}

# Window status colors 
set -g window-status-style fg=${color7},bg=${background}
set -g window-status-current-style fg=${background},bg=${color5},bold

# Simple format strings with minimal formatting
set -g status-left " #S "
set -g status-right-length 50
set -g status-right "#{?client_prefix,[P],} %H:%M #h "
set -g window-status-format " #I:#W "
set -g window-status-current-format " #I:#W "
set -g window-status-separator ""

# Pane border colors
set -g pane-border-style fg=${color8}
set -g pane-active-border-style fg=${color4}

# Message colors
set -g message-style bg=${color3},fg=${background}

# Mode colors
set -g mode-style bg=${color4},fg=${background}
EOF

# Reload tmux config if tmux is running
if command -v tmux &> /dev/null && tmux list-sessions &> /dev/null; then
  tmux source-file "$HOME/.config/tmux/tmux.conf"
  echo "TMUX colors updated"
fi 